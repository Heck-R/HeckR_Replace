
[config settings]
;trimReplaceKeys = true ;trim the keys of the replaces (default: true)
;trimReplaceValues = false ;trim the values of the replaces (default: true)

relativePathRoot = myReplaces ;use this path instead of this config's folder when using relative paths (but this relativePathRoot is always relative to the config's folder)

[replace settings]

modifiers = *? ;additional modifiers for the replaces (same as autohotkey modifiers)
wrapper = ¤ ;sets wrapperLeft and wrapperRight
;wrapperLeft = ¤ ;this with the value "¤" makes replace a key called "asd" to work as if it were "¤asd"
;wrapperRight = ¤ ;this with the value "¤" makes replace a key called "asd" to work as if it were "asd¤"

toggleAbleSections = true ;make it  possible to turn whole sections of replaces on/off with their names
enableToggleAbleSectionsOnStart = true ;by default toggleable sections are disabled, when this is true, it is enabled on startup
toggleWrapper = Ł ;same as wrapper but for toggling sections
;toggleWrapperLeft = Ł ;same as wrapperLeft but for toggling sections
;toggleWrapperRight = Ł ;same as wrapperRight but for toggling sections
alternativeSectionDisabler = ŁŁ ;turning sections off can be done with this as well if defined

[replace configs]
configFile = config.ini ;a reference to another config file which will be processed as well. Does not inherit settings
configFile = folderName ;when using a relative path, it means both "foldName.ini" and "foldName\foldName.ini"

subConfigFile = subConfigFile ;same as configFile but inherits settings

; replaces
[whatever]
try = `swee`ne\nee ;backticks (`) can be used to escape characters. When used with special characters, those are escaped to be their counterparts (`s`t`n`r). When used with anything other, that character will lose any special meaning (like ; or = or ` or whitespaces when trimming is on)
try2 = {U+21d2} ;any unicode character can be used by using the format {U+<characterCode>}